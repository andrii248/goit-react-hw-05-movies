{"version":3,"file":"static/js/310.746e97f0.chunk.js","mappings":"2MACA,EAAyB,2BAAzB,EAA2D,yBAA3D,EAA2H,yB,gDCA3H,EAAuB,wBAAvB,EAAsF,uB,SCI/E,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAC1B,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAsCC,EAAAA,EAAAA,UAASD,EAAaE,IAAI,UAAhE,eAAOC,EAAP,KAAoBC,EAApB,KAOA,OACE,iBAAMC,UAAWC,EAAUR,SAN7B,SAAoBS,GAClBA,EAAEC,iBACFV,EAASK,EACV,EAGC,UACE,8BACE,kBACEM,KAAK,OACLC,SAAU,SAAAH,GAAC,OAAIH,EAAeG,EAAEI,OAAOC,MAA5B,EACXA,MAAuB,OAAhBT,EAAuB,GAAKA,KAErC,mBAAQM,KAAK,SAASJ,UAAWC,EAAjC,wBAMP,CCnBc,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KAEA,GAAwClB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBkB,EAArB,KAgCA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQpB,EAAaE,IAAI,SAEjB,OAAVkB,IAIU,KAAVA,GAKJC,EAAAA,EAAAA,IAAaD,GAAOE,MAAK,SAAAC,GACS,IAA5BA,EAAKA,KAAKC,cAKdP,EAAUM,EAAKA,KAAKE,SAJlBC,IAAAA,OAAAA,QAAA,0CAA2DN,GAK9D,IAVCM,IAAAA,OAAAA,QAAwB,gDAW3B,GAAE,CAAC1B,KAEJmB,EAAAA,EAAAA,YAAU,WACR,OAAOF,EAAU,GAClB,GAAE,KAGD,iBAAKZ,UAAWC,EAAhB,WACE,SAACT,EAAD,CAAWC,SAhCf,SAAsBsB,GACpBF,EAAgB,CAAEE,MAAOA,GAC1B,IA+BIJ,EAAOW,OAAS,IACf,0BACE,eAAItB,UAAWC,EAAf,SACGU,EAAOY,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACExB,UAAWC,EACXwB,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMnB,GAHjB,SAKGe,EAAMK,SANFL,EAAME,GADA,UAgB5B,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"MoviesPage_movies__IkPVC\",\"list\":\"MoviesPage_list__PJZqT\",\"item\":\"MoviesPage_item__3en+6\",\"link\":\"MoviesPage_link__Lj8cH\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"input\":\"Searchbar_input__19umw\",\"btn\":\"Searchbar_btn__MFSUa\"};","import css from './Searchbar.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function Searchbar({ onSubmit }) {\n  const [searchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(searchParams.get('query'));\n\n  function formSubmit(e) {\n    e.preventDefault();\n    onSubmit(searchQuery);\n  }\n\n  return (\n    <form className={css.form} onSubmit={formSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          onChange={e => setSearchQuery(e.target.value)}\n          value={searchQuery === null ? '' : searchQuery}\n        />\n        <button type=\"submit\" className={css.btn}>\n          Search\n        </button>\n      </label>\n    </form>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport css from './MoviesPage.module.css';\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\nimport Notiflix from 'notiflix';\nimport { searchMovies } from 'services/moviesApi';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n\nexport default function Movies() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function onFormSubmit(query) {\n    setSearchParams({ query: query });\n  }\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (query === null) {\n      return;\n    }\n\n    if (query === '') {\n      // toast.info('Please enter the name of the movie to search');\n      Notiflix.Notify.warning('Please enter the name of the movie to search');\n      return;\n    }\n    searchMovies(query).then(data => {\n      if (data.data.total_results === 0) {\n        Notiflix.Notify.failure(`Oops! No movie found containing ${query}`);\n        // toast.error(`Oops! No movie found containing ${query}`);\n        return;\n      }\n      setMovies(data.data.results);\n    });\n  }, [searchParams]);\n\n  useEffect(() => {\n    return setMovies([]);\n  }, []);\n\n  return (\n    <div className={css.movies}>\n      <Searchbar onSubmit={onFormSubmit} />\n      {movies.length > 0 && (\n        <div>\n          <ul className={css.list}>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  className={css.link}\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["Searchbar","onSubmit","useSearchParams","searchParams","useState","get","searchQuery","setSearchQuery","className","css","e","preventDefault","type","onChange","target","value","Movies","location","useLocation","movies","setMovies","setSearchParams","useEffect","query","searchMovies","then","data","total_results","results","Notiflix","length","map","movie","to","id","state","from","title"],"sourceRoot":""}